type Query {
    getAllCategories: [Category]
    getAllProducts: [Product]
    getAllOrders:[Order]
}

type Mutation {
    login(email: String!, password: String!): LogedUser
    addProduct(newProduct: InputProduct!): Product
    addCategory(newCategory: InputProductCategory!): Category
    addUser(newUser: InputUser!): LogedUser
    getTokenByEmail(email: String!): String!
    placeOrder(newOrder: InputOrder!): Order!
    changeOrderStatus(id: String!, newStatus: String!): changeOrderStatueResponse
}

type Category {
    id:String!
    title:String!
}

type Product {
    id: String!
    title: String!
    category: Category!
    quantity: Float!
    regular_price: Float!
    discount_price: Float!
    image: String!
}

input InputProductCategory {
    id: String
    title: String!
}

input InputProduct {
    id:String
    title: String!
    category: InputProductCategory!
    quantity: Float!
    regular_price: Float!
    discount_price: Float!
    image: String!
}

input InputUser {
    email: String!
    name: String!
    address: String!
    postalCode: String!
    country: String!
    phoneNumber: String!
    city: String!
    password:String!
    userType:String!
}

type User {
    id:String!
    email: String!
    name: String!
    address: String!
    postalCode: String!
    country: String!
    phoneNumber: String!
    city: String!
    password: String!
    createdAt: String
    updatedAt: String
    type: String!
}

type LogedUser {
    id:String!
    email: String!
    name: String!
    address: String!
    postalCode: String!
    country: String!
    phoneNumber: String!
    city: String!
    password: String!
    createdAt: String
    updatedAt: String
    userType: String!
    token: String!
}

input InputOrder {
    id: String
    orderCode:String!
    changeShippingAddress:Boolean!
    requestedUser: String!
    shippingDetails: InputShippingDetails!
    productList: [InputProduct!]!
    status: String!
    paymentType: String!
    paymentStatus: Boolean!
    deliveryInstructions:String
    requestedDate:String!
}

input InputShippingDetails {
    fullName: String!
    address: String!
    city: String!
    postalCode: String!
    country: String!
    contactNumber: String!
}

type Order {
    id: String!
    orderCode:String!
    requestedUser: User
    shippingDetails: ShippingDetails!
    productList: [Product!]!
    status:String!
    paymentType:String!
    paymentStatus:Boolean!
    deliveryInstructions:String
    requestedDate:String!
}

type ShippingDetails {
    fullName: String!
    address: String!
    city: String!
    postalCode: String!
    country: String!
    contactNumber: String!
}

type changeOrderStatueResponse {
    order: Order,
    errorMassages: [String]
}